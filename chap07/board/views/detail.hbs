<h1>[{{ title }}] 글 작성 </h1>
{{#with post}}
<h2 class="text-xl"> {{title}} </h2>
<div> 작성자 : <b>{{name}}</b></div>
<div>
    조회수: {{hits}} | 작성일시: {{createdAt}}
    <button onclick="modifyPost()">수정</button>
    <button onclick="deletePost()">삭제</button>
</div>
<div>
    <pre>{{content}}</pre>
</div>

<section>
    <div>
        <h3> {{ lengthOfList comments}}개의 댓글이 있습니다.</h3>
    </div>

    <form method="POST" action="/write-comment">
        <input type="hidden" name="id" value="{{_id}}" />
        <div>
            <div>
                <input type="text" name="name" placeholder="이름" />
                <input type="password" name="password" placeholder="비밀번호" />
            </div>
            <div>
                <textarea cols="30" rows="3" name="comment" placeholder="댓글을 입력하세요"></textarea>
                <button> 댓글쓰기</button>
                <br />
                <br />
            </div>
        </div>
    </form>
</section>

<section>
    {{#each comments}}
        <div>
            <div>작성자: <b>{{name}}</b></div>
            <div>작성일시: {{dateString createdAt}}
                <button onclick="deleteComment('{{idx}}')">삭제</button>
            </div>
            <div>
                <label>{{idx}}</label>
                <pre>{{comment}}</pre>
            </div>
        </div>
    {{/each}}
</section>

{{/with}}

<footer>
    <div>
        <a href="/">목록으로</a>
    </div>
</footer>

<script>
    const postOptions = {
			method: 'POST',
        headers: {
				'Content-Type': 'application/json',
        }
    }
    async function modifyPost () {
        console.log('modifying post');
        const password = prompt("비밀번호를 입력하세요");
        if (!password) {
            return
        }
        const result = await fetch('/check-password', {
            ...postOptions, body: JSON.stringify({id: "{{post._id}}", password: password})
        });
        const data = await  result.json();
        if (data.isExist) {
            document.location = "/modify/{{post._id}}";
            // console.log('Goto: /modify/:postId');
        } else {
            alert("비밀번호가 틀렸습니다.")
        }
        // console.log('end of modifying post');
    }
    const deleteOption = {
			method: 'DELETE',
        headers: {
				'Content-Type': 'application/json',
        }
    }
    async function deletePost() {
        console.log('deleting post');
        const password = prompt("password ? ");
        if (!password) {
            return
        }
        const result = await fetch('/delete', {
            ...deleteOption, body: JSON.stringify({id: "{{post._id}}", password})
        })
        const data = await result.json();
        if (data.isExist) {
            alert("삭제에 실패했습니다. 비밀번호를 확인하세요.")
            return
        }

        document.location = "/";
    }

    async function deleteComment(idx) {
        console.log('deleting post');
        const password = prompt("password ? ");
        if (!password) { return }
        const result = await fetch('/delete-comment', {
		    ...deleteOption, body: JSON.stringify({id: "{{post._id}}", idx, password})
        })

        const data = await result.json();
        if (!data.isSuccess) {
            alert(`댓글 삭제 실패 ${data.error}`)
            return
        }

        alert("댓글 삭제 성공")
        document.location.reload();
    }

</script>
